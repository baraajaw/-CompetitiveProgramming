#include<bits/stdc++.h>
using namespace std ; 
int const N =  3e5 + 1;
long long sqrs[32001] , cnt = 0 ,  n ,arr[N] , ans = 0 , Min[N];
bool vis[N];
int main(){
  
  
  for(int i = 0; i < 32001; ++i)
		sqrs[i] = i * i;

  scanf("%lld" , &n);

  for ( int i = 0 ; i < n ; ++i){
    scanf("%lld" , &arr[i]);
    if ( binary_search (sqrs , sqrs + 32001 , arr[i])){
        cnt++;
        vis[i] = true;
    }
  }
  
  
  if ( cnt == n / 2){
    puts("0");
    return 0;
  }
  
  if ( cnt > n / 2){
    cnt -= ( n / 2 );
    for ( int i = 0 ; cnt > 0 && i < n ; ++i)
      if( vis[i]&& arr[i] != 0){
        ans++;
        cnt--;
      }
    
    for ( int i = 0 ; cnt > 0 && i < n ; ++i)
       if ( vis[i]&& arr[i] == 0){
         ans += 2;
         cnt--;
       }
       
    printf("%lld\n", ans);
		return 0;
  }

  for ( int i = 0 ; i < n ; ++i){
		int idx = lower_bound(sqrs, sqrs + 32001 , arr[i]) - sqrs;
		if ( idx < 32001 && sqrs[idx] == arr[i]){
		  Min[i] = 0;
		}
		else{
		  	long long a = 2e16, b = 2e16;
         if(idx < 32001)
				a = abs(sqrs[idx] - arr[i]);

			if(idx - 1 >= 0)
				b = abs(arr[i] - sqrs[idx - 1]);

			Min[i] = min(a, b);
		}
		
  }
  sort( Min , Min + n);
  ans = 0;
  
   for(int i = 0; i < n / 2; ++i)
		ans += Min[i];
   

    printf("%lld\n", ans);
  
  return 0;
}
