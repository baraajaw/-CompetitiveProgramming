#include<bits/stdc++.h>
using namespace std;

struct trie{
	trie *nxt[26];
	int pre;
	bool end;

	trie(){
		for (int i = 0; i < 26; ++i)
			nxt[i] = NULL;
		pre = end = 0;
	}
};

int n, m;
string s,c;
trie *root;
vector<string> v;

void insert(){
	trie *cur = root;
	for (int i = 0; i < s.size(); ++i){
		int num = s[i] - 'a';
		if (cur -> nxt[num] == NULL)
			cur -> nxt[num] = new trie();
		cur = cur -> nxt[num];
		cur->pre++;
	}
	cur->end = true;
}

void make_word (string tmp, trie * cur ){
	if (cur->end && tmp != s)
		v.push_back(tmp);
	for ( int i = 0; i < 26; ++i)
		if (cur -> nxt[i] != NULL)
			make_word(tmp + char(i + 'a'), cur -> nxt[i]);		
}

bool find(){
	trie *cur = root;
	for (int i = 0; i < s.size(); ++i){
		int num = s[i] - 'a';
		if (cur -> nxt[num] == NULL)
			return false;
		cur = cur -> nxt[num];
	}
	
	make_word(s, cur);
	return true;
}

int main(){


	root = new trie();

	cin >> n;
	for (int i = 0; i < n; ++i){
		cin >> s;
		insert();
	}

	cin >> m;
	for (int i = 0; i < m; ++i){
		cout <<"Case #"<< i + 1<<":"<<endl;
		cin >> s;
		if (find()){
			for (int i = 0; i < v.size(); ++i)
				cout << v[i]<<endl;
			v.clear();
		}
		else
			cout <<"No match."<<endl;
	}
}
