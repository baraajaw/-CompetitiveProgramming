#include <iostream>
#include <vector>
#include <bitset>
 
using namespace std;
 
const int N = 1e5 + 1;
bitset<N> bs;
vector<int> p;
vector<pair<int, int> > sol;
 
void sieve() {
  bs[0] = bs[1] = 1;
 
  for (int i = 2; i * i < N; i++)
    if (bs[i] == 0)
      for (int j = i * i; j < N; j += i)
        bs[j] = 1;
 for (int i = 0; i < N; i++)
    if (bs[i] == 0)
      p.push_back(i);
}
 
void primeFact(int n) {
  sol.clear();
 
  int freq;
  for (int i = 0; i < p.size() && p[i] * p[i] <= n; i++) {
    freq = 0;
 
    while (n % p[i] == 0) {
      ++freq;
      n /= p[i];
    }
 
    if (freq != 0)
      sol.push_back({p[i], freq});
  }
 
  if (n != 1) sol.push_back({n, 1});
}
 
int main() {
  sieve();
 
  long long x ;
  cin >> x;
  while (x != 0) {
      int temp = x;
      if ( x < 0)
       x = -1 * x;
    primeFact(x);
    cout << temp<<" = " ;
    if ( temp < 0)
     cout<< "-1 x ";
 
    for (int i = 0; i < sol.size(); i++) {
      if(i) cout << " x ";
      for ( int j = 0 ; j < sol[i].second ; j++)
      {                if(j) cout << " x ";

                 cout << sol[i].first;

        
      }
    }
    cout << endl;
  
    cin >> x;
  }
  return 0;
}



/*-190 = -1 x 2 x 5 x 19
-191 = -1 x 191
-192 = -1 x 2 x 2 x 2 x 2 x 2 x 2 x 3
-193 = -1 x 193
-194 = -1 x 2 x 97
195 = 3 x 5 x 13
196 = 2 x 2 x 7 x 7
197 = 197
198 = 2 x 3 x 3 x 11
199 = 199
200 = 2 x 2 x 2 x 5 x 5*/
