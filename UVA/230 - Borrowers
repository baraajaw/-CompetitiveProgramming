#include <iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<map>
using namespace std;
#define pp pair <string , string >
#define pp2 pair < pair <string , string > , bool >
int main()
{

	string s , c = "";
		int t ;
		map <string , string> mp2;
		vector<pair<pair<string , string >,bool > >  vct;
		vector<pair < string , string >  > vct2;

		while ( getline ( cin , s ) && s != "END")
			{
		        int l = s.find ( "by");
		       vct.push_back(  make_pair ( make_pair( s.substr ( l + 2 , s.size() - 2) , s.substr ( 1 , l - 3)) , 1));
		        mp2 [ s.substr ( 1 , l - 3)] = s.substr ( l + 2 , s.size() - 2);

			}
		sort (vct.begin() , vct.end());


		while ( getline ( cin , s ) && s != "END")
		{
			if ( s.substr ( 0 , 6) == "BORROW")

						{
						   c = s.substr (8);
						c = c.substr ( 0 , c.size() -1 );


						if ( binary_search ( vct.begin() , vct.end() , pp2 ( pp(mp2[c] , c) , 1)))
							{
							  t = lower_bound ( vct.begin() , vct.end() , pp2 ( pp(mp2[c] , c) , 1)) - vct.begin() ;

							}
						    vct[t].second = 0;

						}
			if ( s.substr ( 0 , 6) == "RETURN")
					{
						 c = s.substr (8);
						c = c.substr ( 0 , c.size() -1 );
						if ( binary_search ( vct.begin() , vct.end() , pp2 ( pp(mp2[c] , c) , 0)) )
									{
										t = lower_bound ( vct.begin() , vct.end() , pp2 ( pp(mp2[c] , c) , 0)) - vct.begin() ;
										vct[t].second = 1;

										vct2.push_back(make_pair (vct[t].first.first , c));
					}
					}
						if ( s == "SHELVE")
										{
											sort ( vct2.begin() , vct2.end());
							for ( int i = 0 ; i < vct2.size() ; i++)
								{
								if (binary_search ( vct.begin() , vct.end() , pp2 ( pp(vct2[i].first , vct2[i].second) , 1)))
												{
							t = lower_bound ( vct.begin() , vct.end() ,pp2 ( pp(vct2[i].first , vct2[i].second) , 1)) - vct.begin() - 1;	
											while ( vct[t].second == 0 && t >= 0)
												t--;
											if ( t == -1)
								 				cout << "Put \""<<vct2[i].second <<"\" first"<<endl;

												else	
											cout << "Put \""<<vct2[i].second <<"\" after \""<< vct[t].first.second<<"\""<<endl;
												}
							 }
							cout<<"END"<<endl;
							vct2.clear();
										}
		}






	return 0;
}
