#include<iostream>
#include<vector>
#include<bitset>
#include<algorithm>
#include <memory.h>
#include<string> 
using namespace std;
//int dx[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
//int dy[] = { 0, 1, 0, -1, 1, -1, -1, 1 };
int dx[] = { -1 , -1 , 0 , 1 , 1 , 1 , 0 , -1 };
int dy[] = { 0 , 1 , 1 , 1, 0 , -1 , -1 , -1 };
vector<string> g;

int n , m ;

void dfs ( int i , int j)
{
	g[i][j] = '*';
	for ( int k = 0 ; k < 8 ; k++)
	{
		int nx = i + dx[k];
		int ny = j + dy[k];
		if ( nx >= 0 && nx < n && ny >= 0 && ny < m && g[nx][ny] == '@' )
		{
		   g[nx][ny] = '*';
		   dfs (nx , ny);
		}
	}
}
int main()
{
    cin >> n >> m;
   while ( n)
   {
     g.clear();
     g.resize(n);
	   for  ( int i = 0 ; i < n ; ++i)
		     cin >> g[i];
	int count = 0 ; 
	for ( int i = 0 ; i < n ; ++i)
		for ( int j = 0 ; j < m ; ++j)
	       if ( g[i][j] =='@')
	       {
	    	   count++;
	    	   dfs (i , j);
	       }
		 printf ("%d\n" , count);
		 cin >> n >> m ;
   }

	return 0;
}
