#include<iostream>
#include<string>
#include<stdio.h>
#include<vector>
#include<memory.h>
#include<map>
using namespace std; 
int const N = 1001;
int dp[N][N];
vector < int > arr1 , arr2;
int a , b  , n , m;

int rec ( int i , int j){
  
  if ( i == arr1.size() || j == arr2.size())
      return 0;
  int &ret = dp[i][j];
  if ( ret != -1)
     return ret;
  ret = 0;
  
  if ( arr1[i] == arr2[j])
         ret = max ( ret , rec ( i + 1 , j + 1) + 1);
       
  
  ret = max ( ret , rec ( i + 1 , j));
  ret = max ( ret , rec ( i , j + 1));
  
  return ret;
}
int main(){
  int t = 1;
  bool flag = true;
   while ( scanf ( "%d%d" , &n , &m) && n != 0 && m != 0){
     
    
     arr1.clear();
     arr2.clear();
     memset (dp , -1 , sizeof dp);
     for ( int i = 0 ; i < n ; ++i){
       scanf ("%d" , &a);
       arr1.push_back(a);
     }
     for ( int i = 0 ; i < m ; ++i){
       scanf ("%d" , &b);
       arr2.push_back(b);
     }
     printf ("Twin Towers #%d\n" , t++);
     printf ("Number of Tiles : %d\n" , rec (0 , 0));
     puts("");
   }
  return 0; 
  
}
